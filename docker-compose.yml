services:
  db:
    image: postgres:15
    platform: linux/amd64   # <--- esta linha forÃ§a a arquitetura
    container_name: aba_postgres
    restart: always
    environment:
      POSTGRES_USER: aba_user
      POSTGRES_PASSWORD: aba_pass123
      POSTGRES_DB: aba_postgres
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aba_user -d aba_postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: aba_app
    restart: always
    environment:
      DB_USER: aba_user
      DB_PASS: aba_pass123
      DB_NAME: aba_postgres
      DB_HOST: db
      SECRET_KEY: "sua_chave_secreta_aqui_123"
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./migrations:/app/migrations
      - ./alembic.ini:/app/alembic.ini

    command: >
      sh -c "
        echo 'ðŸš€ Aguardando banco de dados...' &&
        until pg_isready -h db -U aba_user -d aba_postgres; do sleep 2; done &&
        python init_db_simple.py &&
        echo 'ðŸŽ¯ Iniciando aplicaÃ§Ã£o Flask...' &&
        python src/main.py
      "


volumes:
  pgdata:
